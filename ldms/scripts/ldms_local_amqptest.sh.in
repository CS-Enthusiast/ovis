#!/bin/bash

# NOTE: replace the two vars below with your paths
# NOTE: change ports, intervals if you like
DESTDIR=
allowroot=0
prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
BUILDDIR=@prefix@
# Manually redefine portbase to avoid collisions.
# Base should be above the maximum in :
#  cat /proc/sys/net/ipv4/ip_local_port_range
# and below 65530 or below the minimum and above 1024
portbase=61100
dtop=3
declare -a port
for i in `seq 1 1 $dtop` ; do
	port[$i]=`expr $portbase + $i`
done
if test ! -x $BUILDDIR/sbin/ldmsd; then
	echo "can't find ldmsd binary. set destdir in $0 before testing?"
	exit 1
fi
case "x$USER" in
	x)
	echo "must be run in user environment. USER not set"
	exit 1
	;;
	xroot)
	echo "must be run in user environment. root detected."
	echo "killing other folks ldmsd might be a bad idea"
	echo "change allowroot in $0 to override this check."
	exit 1
	;;
esac
cat << EOF 
For this script to run, you will first need a lanl like rabbit server

# basic rabbitmq testing:
# ./amqp_listen localhost 5672 amq.topic '#'
# ./amqp_sendstring localhost 5672 amq.topic 'ldms.container.metric.id' "234.4"

EOF


# use our pid in dirname to prevent collisions in dir & file naming
TESTDIR=/tmp/$USER/ldmstest/$$
STOREDIR=$TESTDIR/store
SOCKDIR=$TESTDIR/run/ldmsd
AUTHFILE=$TESTDIR/run/authfile
FILTER=$TESTDIR/run/filter
LOGDIR=$TESTDIR/logs

LDMSD_PIDFILE=$TESTDIR/run/ldmsd.pid
SECRET=$SOCKDIR/secret
export TSAN_OPTIONS=verbosity=1:log_path=$LOGDIR:strip_path_prefix=$prefix
export ASAN_OPTIONS=verbosity=1:log_path=$LOGDIR:detect_stack_use_after_return=1:detect_leaks=1:strip_path_prefix=$prefix
export LDMSD_SOCKPATH=${TESTDIR}/run
mkdir -p $STOREDIR $SOCKDIR $LOGDIR $LDMSD_SOCKPATH
echo "secretword=mcgregor" > $AUTHFILE
chmod 600 $AUTHFILE
echo " " > $FILTER
echo "logs and data stored under $TESTDIR"

export LD_LIBRARY_PATH=${BUILDDIR}/lib:@libdir@:@pkglibdir@:@libeventpath@:$LD_LIBRARY_PATH
export LDMS_XPRT_LIBPATH=@pkglibdir@
export PATH=${BUILDDIR}/sbin:$PATH
export LDMSD_PLUGIN_LIBPATH=@pkglibdir@

export TSAN_OPTIONS=verbosity=1:log_path=$LOGDIR:strip_path_prefix=$prefix
export ASAN_OPTIONS=verbosity=1:log_path=$LOGDIR:detect_stack_use_after_return=1:detect_leaks=1:strip_path_prefix=$prefix

# whack the daemons we own
pkill ldmsd
pkill ldms-aggd
sleep 1
echo "Listing ldmsd's still running:"
pgrep ldmsd
echo "Done."

echo removing old logs
rm -f ${LOGDIR}/[1-8].txt

echo removing old output
rm -rf ${STOREDIR}/node
rm -f ${STOREDIR}/*

echo Starting daemons
#dtop=1
dlist=`seq 2 1 $dtop`
for i in $dlist; do
	ldmsd -x sock:${port[$i]} -S $SOCKDIR/metric_socket_$i  -l ${LOGDIR}/$i.txt -r $LDMSD_PIDFILE.$i -v DEBUG
done

ldms-aggd -x sock:${port[1]} -S $SOCKDIR/metric_socket_1  -l ${LOGDIR}/1.txt -v DEBUG -r $LDMSD_PIDFILE.1
sleep 1

OFFSET=0
SOFFSET=10000
INTERVAL=1000000


dstep=7
dstep=1
dlist=`seq 2 $dstep $dtop`
for k in $dlist; do
echo Starting plugins on daemon$k
echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
echo "config name=meminfo producer=localhost$k instance=localhost$k/meminfo schema=meminfo component_id=$k udata_default=$k" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
echo "start name=meminfo interval=$INTERVAL offset=$OFFSET" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
echo "load name=vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
echo "config name=vmstat producer=localhost$k instance=localhost$k/vmstat schema=vmstat component_id=$k udata_default=$k" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
echo "start name=vmstat interval=$INTERVAL offset=$OFFSET" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$k
sleep 2
done



dlist=`seq 2 1 $dtop`

for k in $dlist; do
echo Adding host$k to aggregator1
echo "add host=localhost type=active xprt=sock interval=$INTERVAL offset=200000 port=${port[$k]} sets=localhost$k/meminfo,localhost$k/vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
done

#sleep 5
echo Adding store_rabbitv3 to aggregator1
echo "loglevel level=DEBUG" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
sleep 1
echo "load name=store_rabbitv3" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
#sleep 2
#filtarg="filterlist=$FILTER"
echo "config name=store_rabbitv3 usemeta=y metainterval=3 host=localhost port=5672 exchange=amq.topic $filtarg vhost=priv user=peter pwfile=$AUTHFILE" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "store name=store_rabbitv3 schema=meminfo policy=meminfo container=bigiron"  | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "store name=store_rabbitv3 schema=vmstat policy=vmstat container=bigiron" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
sleep 2
#

sleep 20
pkill ldms-aggd
pkill ldmsd

echo done;
